name: Docker Build and Push

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      if: startsWith(github.ref, 'refs/tags/')

    - name: Build and push server image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.server
        push: ${{ github.event_name != 'workflow_dispatch' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server:latest
          ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}-server:{2}', env.REGISTRY, env.IMAGE_NAME, steps.get_version.outputs.VERSION) || '' }}

    - name: Build and push client image
      uses: docker/build-push-action@v2
      with:
        context: ./client
        file: ./client/Dockerfile
        push: ${{ github.event_name != 'workflow_dispatch' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-client:latest
          ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}-client:{2}', env.REGISTRY, env.IMAGE_NAME, steps.get_version.outputs.VERSION) || '' }}

    - name: Summary
      run: |
        echo "Server image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server:${{ steps.get_version.outputs.VERSION || 'latest' }}"
        echo "Client image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-client:${{ steps.get_version.outputs.VERSION || 'latest' }}"
